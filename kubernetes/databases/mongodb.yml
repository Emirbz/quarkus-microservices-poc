apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: mongodb-service
spec:
  clusterIP: None
  ports:
      - port: 27017
  selector:
    app: mongodb-service
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: maxilog-mongodb
  name: maxilog-mongodb
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-service
  template:
    metadata:
      labels:
        app: mongodb-service
        selector: maxilog-mongodb
    spec:
      containers:
        - name: maxilog-mongodb
          image: mongo:3.4.5
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "maxilog-admin-user"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "maxilog-admin-password"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-init-vol
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mongo-data-volume
              mountPath: /data/db/
      volumes:
        - name: mongo-init-vol
          configMap:
            name: mongo-init
        - name: mongo-data-volume
          persistentVolumeClaim:
            claimName: mongo-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init
data:
  create-users.js: |+
    db.getSiblingDB('notification').createUser({user: 'maxilog-notification-user', pwd: 'maxilog-notification-password', roles: ['readWrite', 'dbAdmin']});